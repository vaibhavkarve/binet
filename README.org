#+title: Binet
#+author: Vaibhav Karve


Implement and time functions that produce the n-th term in the
Fibonacci sequence in languages that *I* care about.

The name Binet is a reference to the constant-time algorithm for
computing the n-th term also known as [[https://en.wikipedia.org/wiki/Fibonacci_number#Binet's_formula][Binet's formula]].

This is written as a multi-lingual project with the aim of including
implementations in every language that *I* know, use or care about.
Including implementations in every single language out there is
non-goal of this project.

* Table of Contents
- [[#project-wide-commands][Project-wide commands]]
- [[#implementations][Implementations]]
- [[#timing,-testing-and-tooling][Timing, testing and tooling]]
- [[#timing-results][Timing results]]
* Project-wide commands
** TODO: explain the justfile commands

* Implementations

|----------------------+-------+------+---------------------------------+-------------+-------+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Language             | Naive | Case | Memoized                        | Accumulator | Binet | Binet-log | Notes                                                                                                                                                                                    |
|----------------------+-------+------+---------------------------------+-------------+-------+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Python [[file:fib.py][fib.py]]        | ✓     | ✓    | ✓                               | ✓           | ✓     | ✓         |                                                                                                                                                                                          |
| Haskell [[file:fib.hs][fib.hs]]       |       | ✓    |                                 |             |       |           |                                                                                                                                                                                          |
| Common Lisp [[file:fib.lisp][fib.lisp]] | ✓     | ✓    | ✓                               | ✓           | ✓     |           | Since memoization is not a built-in for CL, we implement a memoization utility taken from "On Lisp" by Paul Graham. Need to look into compile-time optimization using type declarations. |
| Bash [[file:fib.sh][fib.sh]]          | ✓     | ✓    | No built-in memoization in bash | ✓           |       |           |                                                                                                                                                                                          |
| Lua                  |       |      |                                 |             |       |           |                                                                                                                                                                                          |
| D                    |       |      |                                 |             |       |           |                                                                                                                                                                                          |
|----------------------+-------+------+---------------------------------+-------------+-------+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

* Timing, testing and tooling

|-------------+-----------------+------------------+------------------|
| Language    | Notes on timing | Notes on testing | Notes on tooling |
|-------------+-----------------+------------------+------------------|
| Python      |                 | [[file:test_fib.py][test_fib.py]]      |                  |
| Haskell     |                 |                  |                  |
| Common Lisp |                 | [[file:test_fib.lisp][test_fib.lisp]]    |                  |
| Bash        |                 | [[file:test_fib.sh][test_fib.sh]]      |                  |
| Lua         |                 |                  |                  |
| D           |                 |                  |                  |
|-------------+-----------------+------------------+------------------|

* Timing results
** TODO: Include results from timing of all the implementations
